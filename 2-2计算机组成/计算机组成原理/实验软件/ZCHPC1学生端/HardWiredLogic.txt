;开发者:bluesky_bluesea@yeah.net。注意，本行须为第一行，不得修改和删除，否则本文件无效！
;计算机组成原理实验系统电脑版 ZCHPC1    硬布线逻辑内容
;分号后为注释，中间可以有空格和TAB，IRH和CZS的减号“-”表示可以忽视这个位置上的数值，不用匹配
;前后顺序不能改变，T和CZS是二进制。其余数字是十六进制，
;A、B字段用来确定A、B地址。如果是数字，则直接确定A、B地址；如果R，表示A、B地址由IRL确定。

;输入匹配    | 输出信号
;T    IRH CZS DC1 DC2 MRW I86 I53 I20 SST SSHSCi A B   指令      注释
01000 --  ---  0   7   4   3   1   1   0    1    5 5 ;公共指令，初始化，0→PC，DI#=0
00000 --  ---  0   3   4   2   0   3   0    1    5 5 ;公共指令 执行 PC→AR,PC+1→PC
00010 --  ---  0   1   1   1   0   0   0    0    0 0 ;公共指令 执行 读内存,(AR)→IR

00011 00  ---  0   0   4   3   0   1   1    0    R R ; ADD    A组指令，只一步
00011 20  ---  0   0   4   3   0   1   1    2    R R ; ADC    A组指令，只一步  扩展指令
00011 01  ---  0   0   4   3   1   1   1    1    R R ; 减法   A组指令，只一步
00011 02  ---  0   0   4   3   4   1   1    0    R R ; AND    A组指令，只一步
00011 03  ---  0   0   4   1   1   1   1    1    R R ; CMP    A组指令，只一步
00011 04  ---  0   0   4   3   6   1   1    0    R R ; XOR    A组指令，只一步
00011 05  ---  0   0   4   1   4   1   1    0    R R ; TEST   A组指令，只一步
00011 06  ---  0   0   4   3   3   1   1    0    R R ; OR     A组指令，只一步
00011 07  ---  0   0   4   3   0   4   0    0    R R ; MVRR   A组指令，只一步
00011 08  ---  0   0   4   3   1   3   1    0    0 R ; DEC    A组指令，只一步
00011 09  ---  0   0   4   3   0   3   1    1    0 R ; INC    A组指令，只一步
00011 0A  ---  0   0   4   7   0   3   6    4    0 R ; SHL    A组指令，只一步
00011 0B  ---  0   0   4   5   0   3   5    4    0 R ; SHR    A组指令，只一步
00011 21  ---  0   0   4   3   1   1   1    2    R R ; SBB    A组指令，只一步 扩展指令
00011 41  ---  2   0   4   3   0   5   0    0    5 5 ; JR     A组指令，只一步
00011 44  1--  2   0   4   3   0   5   0    0    5 5 ; JRC    A组指令，只一步  如果C=1，那么I8_6=3；否则 I8_6=1 
00011 44  0--  2   0   4   1   0   5   0    0    5 5 ; JRC    A组指令，只一步  如果C=1，那么I8_6=3；否则 I8_6=1 
00011 45  1--  2   0   4   1   0   5   0    0    5 5 ; JRNC   A组指令，只一步  如果C=0，那么I8_6=3；否则 I8_6=1 
00011 45  0--  2   0   4   3   0   5   0    0    5 5 ; JRNC   A组指令，只一步  如果C=0，那么I8_6=3；否则 I8_6=1 
00011 46  -1-  2   0   4   3   0   5   0    0    5 5 ; JRZ    A组指令，只一步  如果Z=1，那么I8_6=3；否则 I8_6=1 
00011 46  -0-  2   0   4   1   0   5   0    0    5 5 ; JRZ    A组指令，只一步  如果Z=1，那么I8_6=3；否则 I8_6=1 
00011 47  -1-  2   0   4   1   0   5   0    0    5 5 ; JRNZ   A组指令，只一步  如果Z=0，那么I8_6=3；否则 I8_6=1 
00011 47  -0-  2   0   4   3   0   5   0    0    5 5 ; JRNZ   A组指令，只一步  如果Z=0，那么I8_6=3；否则 I8_6=1 
00011 60  ---  0   0   4   3   0   4   0    0    R 5 ; JMPR   A组指令，只一步 
00011 64  --1  2   0   4   3   0   5   0    0    5 5 ; JRS    A组指令，只一步  扩展指令 如果S=1，那么I8_6=3；否则 I8_6=1 
00011 64  --0  2   0   4   1   0   5   0    0    5 5 ; JRS    A组指令，只一步  扩展指令 如果S=1，那么I8_6=3；否则 I8_6=1 
00011 65  --1  2   0   4   1   0   5   0    0    5 5 ; JRNS   A组指令，只一步  扩展指令 如果S=0，那么I8_6=3；否则 I8_6=1 
00011 65  --0  2   0   4   3   0   5   0    0    5 5 ; JRNS   A组指令，只一步  扩展指令 如果S=0，那么I8_6=3；否则 I8_6=1 
00011 6C  ---  0   0   4   1   0   0   3    0    0 0 ; CLC    A组指令，只一步
00011 6D  ---  0   0   4   1   0   0   4    0    0 0 ; STC    A组指令，只一步
00011 6E  ---  0   6   4   1   0   0   0    0    0 0 ; EI     A组指令，只一步
00011 6F  ---  0   7   4   1   0   0   0    0    0 0 ; DI     A组指令，只一步
00011 2A  ---  0   0   4   7   0   3   6    5    0 R ; RCL    A组指令，只一步
00011 2B  ---  0   0   4   5   0   3   5    5    0 R ; RCR    A组指令，只一步
00011 2C  ---  0   0   4   5   0   3   5    7    0 R ; ASR    A组指令，只一步
00011 2D  ---  0   0   4   3   7   3   1    0    0 R ; NOT    A组指令，只一步
00110 80  ---  0   3   4   2   0   3   0    1    5 5 ; JMPA   B组指令，共2步，这里是第一步
00100 80  ---  0   0   1   3   0   7   0    0    0 5 ; JMPA   B组指令，共2步，这里是第二步
00110 81  ---  0   3   4   1   0   4   0    0    R 0 ; LDRR   B组指令，共2步，这里是第一步
00100 81  ---  0   0   1   3   0   7   0    0    0 R ; LDRR   B组指令，共2步，这里是第二步
00110 85  ---  0   3   4   3   1   3   0    0    0 4 ; PUSH   B组指令，共2步，这里是第一步
00100 85  ---  1   0   0   1   0   4   0    0    R 0 ; PUSH   B组指令，共2步，这里是第二步
00110 83  ---  0   3   4   1   0   3   0    0    0 R ; STRR   B组指令，共2步，这里是第一步
00100 83  ---  1   0   0   1   0   4   0    0    R 0 ; STRR   B组指令，共2步，这里是第二步
00110 84  ---  0   3   4   3   1   3   0    0    0 4 ; PSHF   B组指令，共2步，这里是第一步
00100 84  ---  3   0   0   1   0   0   0    0    0 0 ; PSHF   B组指令，共2步，这里是第二步
00110 82  ---  2   3   4   1   0   7   0    0    0 0 ; IN     B组指令，共2步，这里是第一步
00100 82  ---  0   0   3   3   0   7   0    0    0 0 ; IN     B组指令，共2步，这里是第二步
00110 86  ---  2   3   4   1   0   7   0    0    0 0 ; OUT    B组指令，共2步，这里是第一步
00100 86  ---  1   0   2   1   0   4   0    0    0 0 ; OUT    B组指令，共2步，这里是第二步
00110 87  ---  0   3   4   2   0   3   0    1    4 4 ; POP    B组指令，共2步，这里是第一步
00100 87  ---  0   0   1   3   0   7   0    0    0 R ; POP    B组指令，共2步，这里是第二步
00110 88  ---  0   3   4   2   0   3   0    1    5 5 ; MVRD   B组指令，共2步，这里是第一步
00100 88  ---  0   0   1   3   0   7   0    0    0 R ; MVRD   B组指令，共2步，这里是第二步
00110 8F  ---  0   3   4   2   0   3   0    1    4 4 ; RET    B组指令，共2步，这里是第一步
00100 8F  ---  0   0   1   3   0   7   0    0    0 5 ; RET    B组指令，共2步，这里是第二步
00110 8C  ---  0   3   4   2   0   3   0    1    4 4 ; POPF   B组指令，共2步，这里是第一步
00100 8C  ---  0   0   1   1   0   0   2    0    0 0 ; POPF   B组指令，共2步，这里是第二步
00110 E0  ---  0   3   4   3   1   3   0    0    0 4 ; CALR   C组指令，共3步，这里是第一步
00111 E0  ---  1   0   0   1   0   4   0    0    5 0 ; CALR   C组指令，共3步，这里是第二步
00101 E0  ---  0   0   4   3   0   4   0    0    R 5 ; CALR   C组指令，共3步，这里是第三步
00110 E4  ---  0   3   4   2   0   3   0    1    5 5 ; LDRA   C组指令，共3步，这里是第一步
00111 E4  ---  0   3   1   1   0   7   0    0    0 0 ; LDRA   C组指令，共3步，这里是第二步
00101 E4  ---  0   0   1   3   0   7   0    0    0 R ; LDRA   C组指令，共3步，这里是第三步
00110 E5  ---  0   3   4   2   0   3   0    1    5 5 ; LDRX   C组指令，共3步，这里是第一步
00111 E5  ---  0   3   1   1   0   5   0    0    R 0 ; LDRX   C组指令，共3步，这里是第二步
00101 E5  ---  0   0   1   3   0   7   0    0    0 R ; LDRX   C组指令，共3步，这里是第三步
00110 E6  ---  0   3   4   2   0   3   0    1    5 5 ; STRX   C组指令，共3步，这里是第一步
00111 E6  ---  0   3   1   1   0   5   0    0    R 0 ; STRX   C组指令，共3步，这里是第二步
00101 E6  ---  1   0   0   1   0   3   0    0    0 R ; STRX   C组指令，共3步，这里是第三步
00110 E7  ---  0   3   4   2   0   3   0    1    5 5 ; STRA   C组指令，共3步，这里是第一步
00111 E7  ---  0   3   1   1   0   7   0    0    0 0 ; STRA   C组指令，共3步，这里是第二步
00101 E7  ---  1   0   0   1   0   4   0    0    R 0 ; STRA   C组指令，共3步，这里是第三步
00110 CE  ---  0   3   4   2   0   3   0    1    5 5 ; CALA   D组指令，共4步，这里是第一步
00100 CE  ---  0   0   1   0   0   7   0    0    0 0 ; CALA   D组指令，共4步，这里是第二步
00111 CE  ---  0   3   4   3   1   3   0    0    0 4 ; CALA   D组指令，共4步，这里是第三步
00101 CE  ---  1   0   0   2   0   2   0    0    5 5 ; CALA   D组指令，共4步，这里是第四步
00110 EF  ---  0   3   4   2   0   3   0    1    4 4 ; IRET   D组指令，共4步，这里是第一步
00100 EF  ---  0   4   1   1   0   0   2    0    0 0 ; IRET   D组指令，共4步，这里是第二步
00111 EF  ---  0   3   4   2   0   3   0    1    4 4 ; IRET   D组指令，共4步，这里是第三步
00101 EF  ---  0   0   1   3   0   7   0    0    0 5 ; IRET   D组指令，共4步，这里是第四步

10000 --  ---  0   7   4   1   0   0   0    0    0 0 ; 中断隐指令1/7 T=10000 关中断
10010 --  ---  3   0   4   0   0   7   0    0    0 0 ; 中断隐指令2/7 T=10010  FLAGS存储到Q寄存器
10110 --  ---  0   3   4   3   1   3   0    0    0 4 ; 中断隐指令3/7 T=10110  SP-1→SP、→AR
10100 --  ---  1   5   0   1   0   4   0    0    5 0 ; 中断隐指令4/7 T=10100  PC→MEM、INTNEW#=0
10111 --  ---  0   3   4   3   1   3   0    0    0 4 ; 中断隐指令5/7 T=10111  SP-1→SP、→AR
10101 --  ---  1   0   0   1   0   2   0    0    0 0 ; 中断隐指令6/7 T=10101  Q→MEM
11000 --  ---  5   0   4   3   0   7   0    0    0 5 ; 中断隐指令7/7 T=11000  INTV#=0、IB→PC、CC#=0
